MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 ; PICBASIC PRO(TM) Compiler 2.60, (c) 1998, 2009 microEngineering Labs, Inc. All Rights Reserved. 
  00000001            00003 _USED                   EQU     1
                      00004 
                      00005         INCLUDE "C:\MICROC~1\PBP\18F4550.INC"
                      00001 ;****************************************************************
                      00002 ;*  18F4550.INC                                                 *
                      00003 ;*                                                              *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                   *
                      00005 ;*  Notice    : Copyright (c) 2009 microEngineering Labs, Inc.  *
                      00006 ;*              All Rights Reserved                             *
                      00007 ;*  Date      : 03/20/09                                        *
                      00008 ;*  Version   : 2.60                                            *
                      00009 ;*  Notes     :                                                 *
                      00010 ;****************************************************************
                      00017         LIST
                      00018         LIST p = 18F4550, r = dec, w = -311, w = -230, f = inhx32
                      00019         INCLUDE "P18F4550.INC"  ; MPASM  Header
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F4550 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01764         LIST
                      00020         __CONFIG    _CONFIG1L, _PLLDIV_5_1L & _CPUDIV_OSC1_PLL2_1L & _USBDIV_2_1L
300000 3EE4           00021         __CONFIG    _CONFIG1H, _FOSC_HSPLL_HS_1H & _FCMEN_OFF_1H & _IESO_OFF_1H
                      00022         __CONFIG    _CONFIG2L, _PWRT_OFF_2L & _BOR_ON_2L & _BORV_3_2L & _VREGEN_ON_2L
300002 F3FF           00023         __CONFIG    _CONFIG2H, _WDT_ON_2H & _WDTPS_512_2H
300004 F9FF           00024         __CONFIG    _CONFIG3H, _CCP2MX_ON_3H & _PBADEN_OFF_3H & _LPT1OSC_OFF_3H & _MCLRE_ON_3H
300006 FF9B           00025         __CONFIG    _CONFIG4L, _STVREN_ON_4L & _LVP_OFF_4L & _ICPRT_OFF_4L & _XINST_OFF_4L
                      00028         LIST
  00F00000            00029 EEPROM_START    EQU     0F00000h
  00000020            00030 BLOCK_SIZE      EQU     32
                      00006 
                      00007 
                      00008 ; Define statements.
                      00009 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00012   Define OSC 10  ; Definir que se 
                            trabajará con 10MHz.
                      00010 #define         OSC              10  ; Definir que se trabajará con 10MHz.
                      00011 
  00000000            00012 RAM_START                       EQU     00000h
  000007FF            00013 RAM_END                         EQU     007FFh
  00000008            00014 RAM_BANKS                       EQU     00008h
  00000060            00015 BANK0_START                     EQU     00060h
  000000FF            00016 BANK0_END                       EQU     000FFh
  00000100            00017 BANK1_START                     EQU     00100h
  000001FF            00018 BANK1_END                       EQU     001FFh
  00000200            00019 BANK2_START                     EQU     00200h
  000002FF            00020 BANK2_END                       EQU     002FFh
  00000300            00021 BANK3_START                     EQU     00300h
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  000003FF            00022 BANK3_END                       EQU     003FFh
  00000400            00023 BANK4_START                     EQU     00400h
  000004FF            00024 BANK4_END                       EQU     004FFh
  00000500            00025 BANK5_START                     EQU     00500h
  000005FF            00026 BANK5_END                       EQU     005FFh
  00000600            00027 BANK6_START                     EQU     00600h
  000006FF            00028 BANK6_END                       EQU     006FFh
  00000700            00029 BANK7_START                     EQU     00700h
  000007FF            00030 BANK7_END                       EQU     007FFh
  00000000            00031 BANKA_START                     EQU     00000h
  0000005F            00032 BANKA_END                       EQU     0005Fh
                      00033 
                      00034 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00028   A00000  FLAGS   VAR     BYTE BANKA SYSTEM       ' Static flags
  00000000            00035 FLAGS                           EQU     RAM_START + 000h
                      00036 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00012   A00001  R0      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000001            00037 R0                              EQU     RAM_START + 001h
                      00038 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00013   A00003  R1      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000003            00039 R1                              EQU     RAM_START + 003h
                      00040 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00014   A00005  R2      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000005            00041 R2                              EQU     RAM_START + 005h
                      00042 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00015   A00007  R3      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000007            00043 R3                              EQU     RAM_START + 007h
                      00044 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00016   A00009  R4      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000009            00045 R4                              EQU     RAM_START + 009h
                      00046 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00017   A0000B  R5      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000B            00047 R5                              EQU     RAM_START + 00Bh
                      00048 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00018   A0000D  R6      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000D            00049 R6                              EQU     RAM_START + 00Dh
                      00050 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00019   A0000F  R7      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  0000000F            00051 R7                              EQU     RAM_START + 00Fh
                      00052 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00020   A00011  R8      VAR     WORD BANKA SYSTEM       ' System Registe
                            r
  00000011            00053 R8                              EQU     RAM_START + 011h
                      00054 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00027   A00013  GOP     VAR     BYTE BANKA SYSTEM       ' Gen Op Paramet
                            er
  00000013            00055 GOP                             EQU     RAM_START + 013h
                      00056 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00023   A00014  RM1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Mask
  00000014            00057 RM1                             EQU     RAM_START + 014h
                      00058 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00026   A00015  RM2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Mask
  00000015            00059 RM2                             EQU     RAM_START + 015h
                      00060 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00021   A00016  RR1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Register
  00000016            00061 RR1                             EQU     RAM_START + 016h
                      00062 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00024   A00017  RR2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Register
  00000017            00063 RR2                             EQU     RAM_START + 017h
                      00064 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00022   A00018  RS1     VAR     BYTE BANKA SYSTEM       ' Pin 1 Bank
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000018            00065 RS1                             EQU     RAM_START + 018h
                      00066 ; C:\MICROC~1\PBP\PBPPIC18.RAM  00025   A00019  RS2     VAR     BYTE BANKA SYSTEM       ' Pin 2 Bank
  00000019            00067 RS2                             EQU     RAM_START + 019h
                      00068 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00014   A0001A  x var byte     ; se decl
                            ara variable x como byte (0 - 255)
  0000001A            00069 _x                              EQU     RAM_START + 01Ah
                      00070 ; C:\MICROC~1\PBP\18F4550.BAS   00026   PORTL   VAR     PORTB
  00000F81            00071 _PORTL                          EQU      PORTB
                      00072 ; C:\MICROC~1\PBP\18F4550.BAS   00027   PORTH   VAR     PORTC
  00000F82            00073 _PORTH                          EQU      PORTC
                      00074 ; C:\MICROC~1\PBP\18F4550.BAS   00028   TRISL   VAR     TRISB
  00000F93            00075 _TRISL                          EQU      TRISB
                      00076 ; C:\MICROC~1\PBP\18F4550.BAS   00029   TRISH   VAR     TRISC
  00000F94            00077 _TRISH                          EQU      TRISC
                      00078 
                      00079 ; Constants.
  00000400            00080 _USBMEMORYADDRESS               EQU     00400h
                      00081 
                      00082 ; EEPROM data.
                      00083 
                      00084 
                      00085         INCLUDE "PRACT4.MAC"
                      00001 
                      00075         LIST
                      00086         INCLUDE "C:\MICROC~1\PBP\PBPPIC18.LIB"
                      00001 ;******************************************************************
                      00002 ;*  PBPPIC18.LIB                                                  *
                      00003 ;*                                                                *
                      00004 ;*  By        : Leonard Zerman, Jeff Schmoyer                     *
                      00005 ;*  Notice    : Copyright (c) 2009 microEngineering Labs, Inc.    *
                      00006 ;*              All Rights Reserved                               *
                      00007 ;*  Date      : 07/08/09                                          *
                      00008 ;*  Version   : 2.60                                              *
                      00009 ;*  Notes     :                                                   *
                      00010 ;******************************************************************
                      00074   LIST
                      00075 ; Oscillator is 10MHz
                      01182   LIST
000000                01183     ORG RESET_ORG               ; Reset vector at 0
                      01192   LIST
000000 EF41 F000      01193         goto    INIT            ; Finish initialization
                      06318   LIST
000004 6A04           06319 PAUSE   clrf    R1 + 1
000006 6E03           06320 PAUSEL  movwf   R1
000008 6AE8           06321 pauseloop clrf  WREG            ; 1 (8) Clear W for subtracts
00000A 0603           06322         decf    R1, F           ; 1
00000C 5A04           06323         subwfb  R1 + 1, F       ; 1
00000E A0D8           06324         btfss   STATUS, C       ; 2
000010 EF3E F000      06325         goto    DUNN
000014 0E03           06326         movlw   (PAUSE_DELAY) >> 8      ; 1
000016 6E02           06327         movwf   R0 + 1          ; 1
000018 0EE5           06328         movlw   low (PAUSE_DELAY)       ; 1
00001A D802           06329         rcall   PAUSEUSL        ; -2 (PAUSEUSL gives you 2 less than you ask for)
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001C D7F5           06330         bra     pauseloop       ; 2
                      06440   LIST
00001E 6A02           06441 PAUSEUS clrf    R0 + 1          ; 1
000020 0FF7           06442 PAUSEUSL addlw  -9              ; 1 Subtract overhead
000022 6E01           06443         movwf   R0              ; 1
000024 0EFE           06444         movlw   -2              ; 1
000026 E304           06445         bnc     pauseush        ; 1 / 2
000028 D000           06446         bra     $ + 2           ; 2
00002A D000           06447         bra     $ + 2           ; 2
00002C 2601           06448 pauseusloop addwf R0, F         ; 1
00002E A0D8           06449         btfss   STATUS, C       ; 1 / 2
000030 0602           06450 pauseush decf   R0 + 1, F       ; 1 / 0
000032 E2FC           06451         bc      pauseusloop     ; 1 / 2
                      06452         CLRWDT?NOP              ; 1
                          M     ifndef NO_CLRWDT
000034 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000036 A001           06453         btfss   R0, 0           ; 1 / 2
000038 D002           06454         bra     pauseusdone     ; 2 / 0
00003A D000           06455         bra     $ + 2           ; 0 / 2
00003C D000           06456         bra     $ + 2           ; 0 / 2
00003E 0012           06457 pauseusdone return              ; 2 + 3 (call + setup)
                      07720   LIST
000040 5003           07721 MUL     movf    R1, W
000042 0207           07722         mulwf   R3              ; R1 * R3 = PRODHL
000044 CFF3 F005      07723         movff   PRODL, R2
000048 CFF4 F006      07724         movff   PRODH, R2 + 1
                      07725 
00004C 5004           07726         movf    R1 + 1, W
00004E 0208           07727         mulwf   R3 + 1          ; R1 + 1 * R3 + 1 = PRODHL
000050 CFF3 F001      07728         movff   PRODL, R0
000054 CFF4 F002      07729         movff   PRODH, R0 + 1
                      07730 
                      07731 ;       movf    R1 + 1, W       ; W still has R1 + 1 from above
000058 0207           07732         mulwf   R3              ; R1 + 1 * R3 = PRODHL
00005A 50F3           07733         movf    PRODL, W        ; Add cross products
00005C 2606           07734         addwf   R2 + 1, F
00005E 50F4           07735         movf    PRODH, W
000060 2201           07736         addwfc  R0, F
000062 6AE8           07737         clrf    WREG
000064 2202           07738         addwfc  R0 + 1, F
                      07739 
000066 5003           07740         movf    R1, W
000068 0208           07741         mulwf   R3 + 1          ; R1 * R3 + 1 = PRODHL
00006A 50F3           07742         movf    PRODL, W        ; Add cross products
00006C 2606           07743         addwf   R2 + 1, F
00006E 50F4           07744         movf    PRODH, W
000070 2201           07745         addwfc  R0, F
000072 6AE8           07746         clrf    WREG
000074 2202           07747         addwfc  R0 + 1, F
                      07748 
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000076 5005           07749         movf    R2, W           ; Get low byte to W
000078 EF3E F000      07750         goto    DUNN
                      07786   LIST
00007C 0100           07787 DUNN    movlb   0               ; 1 Reset banks to 0
                      07788 DUNN5   CLRWDT?NOP              ; 1 Hit Watchdog timer
                          M     ifndef NO_CLRWDT
00007E 0004               M         clrwdt
                          M     else
                          M         nop
                          M     endif
000080 0012           07789         return                  ; 2 Done
                      07802   LIST
000082                07803 INIT
                      07839   LIST
000082                07840 main
                      00087 
                      00088 
                      00089 ; C:\MICROC~1\PBP\18F4550.BAS   00012   BANKA   $0000, $005F
                      00090 ; C:\MICROC~1\PBP\18F4550.BAS   00013   BANK0   $0060, $00FF
                      00091 ; C:\MICROC~1\PBP\18F4550.BAS   00014   BANK1   $0100, $01FF
                      00092 ; C:\MICROC~1\PBP\18F4550.BAS   00015   BANK2   $0200, $02FF
                      00093 ; C:\MICROC~1\PBP\18F4550.BAS   00016   BANK3   $0300, $03FF
                      00094 ; C:\MICROC~1\PBP\18F4550.BAS   00017   BANK4   $0400, $04FF
                      00095 ; C:\MICROC~1\PBP\18F4550.BAS   00018   BANK5   $0500, $05FF
                      00096 ; C:\MICROC~1\PBP\18F4550.BAS   00019   BANK6   $0600, $06FF
                      00097 ; C:\MICROC~1\PBP\18F4550.BAS   00020   BANK7   $0700, $07FF
                      00098 ; C:\MICROC~1\PBP\18F4550.BAS   00022   LIBRARY "PBPPIC18"
                      00099 
                      00100 ; C:\MICROC~1\PBP\18F4550.BAS   00024           include "PIC18EXT.BAS"
                      00101 
                      00102 ; C:\MICROC~1\PBP\18F4550.BAS   00031           include "PBPPIC18.RAM"
                      00103 ; C:\MICROC~1\PBP\18F4550.BAS   00032   USBMEMORYADDRESS Con    $400    ' USB RAM starts here
                      00104 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00012   Define OSC 10  ; Definir que se 
                            trabajará con 10MHz.
                      00105 
                      00106 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00016   TRISB = %00000000   ; configurar
                             los 8bits del puerto B como salida
                      00107         MOVE?CB 000h, TRISB
                          M         CHK?RP  TRISB
                          M     if (((TRISB) & 8000h) != PREV_ALT)
                          M       if ((TRISB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (TRISB) & 8000h
                          M     endif
                          M     if ((((TRISB) & 0fffh) > BANKA_END) & (((TRISB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((TRISB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (TRISB)
                          M PREV_BANK = high (TRISB)
                          M       endif
                          M     endif
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (low (000h) == 0)
000082 6A93               M         clrf    TRISB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    TRISB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   TRISB
                          M       endif
                          M     endif
                      00108 
                      00109 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00017   PORTB = %00000000   ; limpiar pu
                            erto, todo apagado
                      00110         MOVE?CB 000h, PORTB
                          M         CHK?RP  PORTB
                          M     if (((PORTB) & 8000h) != PREV_ALT)
                          M       if ((PORTB) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (PORTB) & 8000h
                          M     endif
                          M     if ((((PORTB) & 0fffh) > BANKA_END) & (((PORTB) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((PORTB) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (PORTB)
                          M PREV_BANK = high (PORTB)
                          M       endif
                          M     endif
                          M     if (low (000h) == 0)
000084 6A81               M         clrf    PORTB
                          M     else
                          M       if (low (000h) == 255)
                          M         setf    PORTB
                          M       else
                          M         movlw   low (000h)
                          M         movwf   PORTB
                          M       endif
                          M     endif
                      00111 
                      00112 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00019   inicio:             ; etiqueta
                      00113 
                      00114         LABEL?L _inicio 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         LALL
                          M _inicio
                          M         XALL
                          M     else
000086                    M _inicio
                          M     endif
                      00115 
                      00116 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00021     for x = 1 to 255
                      00117         MOVE?CB 001h, _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 8000h) != PREV_ALT)
                          M       if ((_x)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_x)    & 8000h
                          M     endif
                          M     if ((((_x)    & 0fffh) > BANKA_END) & (((_x)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_x)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_x)
                          M PREV_BANK = high (_x)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _x
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _x
                          M       else
000086 0E01               M         movlw   low (001h)
000088 6E1A               M         movwf   _x
                          M       endif
                          M     endif
                      00118         LABEL?L L00001  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M     ifdef PM_USED
                          M         LALL
                          M L00001
                          M         XALL
                          M     else
00008A                    M L00001
                          M     endif
                      00119         CMPGT?BCL       _x, 0FFh, L00002
                          M     if ((0FFh) < 0)
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         L?GOTO  L00002
                          M     else
                          M       if ((0FFh) < 0ffh)
                          M         CLRWDT?
                          M         MOVE?CA (0FFh) + 1
                          M         CHK?RP  _x
                          M         subwf   _x,  W
                          M         BIT?GOTO 1, STATUS, C, L00002
                          M       endif
                          M     endif
                      00120 
                      00121 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00023   PORTB = x   ; pone en alto valor
                             x
                      00122         MOVE?BB _x, PORTB
00008A C01A FF81          M         movff   _x,  PORTB
                      00123 
                      00124 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00024   pause 500           ; 1000ms = 1
                            seg
                      00125         PAUSE?C 001F4h
                          M     if (((001F4h) >> 8) == 0)
                          M         MOVE?CA 001F4h
                          M         L?CALL  PAUSE
                          M     else
                          M         MOVE?CB (001F4h) >> 8, R1 + 1
                          M         CHK?RP  R1 + 1
                          M     if (((R1 + 1) & 8000h) != PREV_ALT)
                          M       if ((R1 + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1 + 1) & 8000h
                          M     endif
                          M     if ((((R1 + 1) & 0fffh) > BANKA_END) & (((R1 + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1 + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1 + 1)
                          M PREV_BANK = high (R1 + 1)
                          M       endif
                          M     endif
                          M     if (low ((001F4h) >> 8) == 0)
                          M         clrf    R1 + 1
                          M     else
                          M       if (low ((001F4h) >> 8) == 255)
                          M         setf    R1 + 1
                          M       else
00008E 0E01               M         movlw   low ((001F4h) >> 8)
000090 6E04               M         movwf   R1 + 1
                          M       endif
                          M     endif
                          M         MOVE?CA low (001F4h)
000092 0EF4               M         movlw   low (low (001F4h))
                          M         L?CALL  PAUSEL
                          M         RST?RP
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    PAUSEL
                          M     else
                          M       if ((PAUSEL) < 1)
                          M         call    PAUSEL
                          M       else
                          M         if ((PAUSEL) > $)
                          M         call    PAUSEL
                          M         else
                          M           if ((PAUSEL) < ($ - 3ffh))
                          M         call    PAUSEL
                          M           else
000094 DFB8               M         rcall   PAUSEL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00126 
                      00127 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00025   x = x * 2   ; potencia 2
                      00128         MUL?BCB _x, 002h, _x
                          M         MOVE?BW _x,  R3
                          M         MOVE?BB _x,  R3
000096 C01A F007          M         movff   _x,  R3
                          M         CHK?RP  R3
                          M     if (((R3)    & 8000h) != PREV_ALT)
                          M       if ((R3)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R3)    & 8000h
                          M     endif
                          M     if ((((R3)    & 0fffh) > BANKA_END) & (((R3)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R3)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R3)
                          M PREV_BANK = high (R3)
                          M       endif
                          M     endif
00009A 6A08               M         clrf    (R3)   + 1
                          M         MOVE?CW 002h, R1
                          M     ifdef USE_LINKER
                          M         CHK?RP  R1
                          M         movlw   low (002h)
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   R1
                          M         movlw   high (002h)
                          M         movwf   (R1)   + 1
                          M     else
                          M         MOVE?CB low (002h), R1
                          M         CHK?RP  R1
                          M     if (((R1)    & 8000h) != PREV_ALT)
                          M       if ((R1)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (R1)    & 8000h
                          M     endif
                          M     if ((((R1)    & 0fffh) > BANKA_END) & (((R1)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((R1)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (R1)
                          M PREV_BANK = high (R1)
                          M       endif
                          M     endif
                          M     if (low (low (002h)) == 0)
                          M         clrf    R1
                          M     else
                          M       if (low (low (002h)) == 255)
                          M         setf    R1
                          M       else
00009C 0E02               M         movlw   low (low (002h))
00009E 6E03               M         movwf   R1
                          M       endif
                          M     endif
                          M         MOVE?CB high (002h), (R1)  + 1
                          M         CHK?RP  (R1) + 1
                          M     if ((((R1) + 1) & 8000h) != PREV_ALT)
                          M       if (((R1) + 1) & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = ((R1) + 1) & 8000h
                          M     endif
                          M     if (((((R1) + 1) & 0fffh) > BANKA_END) & ((((R1) + 1) & 0fffh) < (0f01h + BANKA_END)))
                          M       if ((((R1) + 1) & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high ((R1) + 1)
                          M PREV_BANK = high ((R1) + 1)
                          M       endif
                          M     endif
                          M     if (low (high (002h)) == 0)
0000A0 6A04               M         clrf    (R1) + 1
                          M     else
                          M       if (low (high (002h)) == 255)
                          M         setf    (R1) + 1
                          M       else
                          M         movlw   low (high (002h))
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         movwf   (R1) + 1
                          M       endif
                          M     endif
                          M     endif
                          M         L?CALL  MUL
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         call    MUL
                          M     else
                          M       if ((MUL)   < 1)
                          M         call    MUL
                          M       else
                          M         if ((MUL)   > $)
                          M         call    MUL
                          M         else
                          M           if ((MUL)   < ($ - 3ffh))
                          M         call    MUL
                          M           else
0000A2 DFCE               M         rcall   MUL
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M         MOVE?AB _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 8000h) != PREV_ALT)
                          M       if ((_x)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_x)    & 8000h
                          M     endif
                          M     if ((((_x)    & 0fffh) > BANKA_END) & (((_x)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_x)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_x)
                          M PREV_BANK = high (_x)
                          M       endif
                          M     endif
0000A4 6E1A               M         movwf   _x
                      00129 
                      00130 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00026   next x
                      00131         NEXT?BCL        _x, 001h, L00001
                          M     if ((001h) == 1)
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         CHK?RP  _x
                          M     if (((_x)    & 8000h) != PREV_ALT)
                          M       if ((_x)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_x)    & 8000h
                          M     endif
                          M     if ((((_x)    & 0fffh) > BANKA_END) & (((_x)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_x)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_x)
                          M PREV_BANK = high (_x)
                          M       endif
                          M     endif
0000A6 2A1A               M         incf    _x,  F
                          M     else
                          M         movlw   001h
                          M         CHK?RP  _x
                          M         addwf   _x,  F
                          M     endif
                          M     if ((001h) <= 255)
                          M         BIT?GOTO 0, STATUS, C, L00001
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (L00001))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M     if (((STATUS) > BANKA_END) & ((STATUS) < (0f01h + BANKA_END)))
                          M         bcf     STATUS, OV
                          M         CHK?RP  STATUS
                          M       if ((0)      == 0)
                          M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M         bsf     STATUS, OV
                          M         RST?RP
                          M       ifdef USE_LINKER
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M           else
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M             if ((L00001) < ($ - 7fh))
                          M         btfsc   STATUS, OV
                          M         goto    L00001
                          M             else
                          M         bov     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     else
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M       if ((0)      == 0)
0000A8 A0D8               M         btfss   STATUS, C
                          M       else
                          M         btfsc   STATUS, C
                          M       endif
                          M       ifdef USE_LINKER
                          M         goto    L00001
                          M       else
                          M         if ((L00001) < 1)
                          M         goto    L00001
                          M         else
                          M           if ((L00001) > $)
                          M         goto    L00001
                          M           else
                          M             if ((L00001) < ($ - 3ffh))
                          M         goto    L00001
                          M             else
0000AA D7EF               M         bra     L00001
                          M             endif
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                          M     endif
                      00132         LABEL?L L00002  
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     ifdef PM_USED
                          M         LALL
                          M L00002
                          M         XALL
                          M     else
0000AC                    M L00002
                          M     endif
                      00133 
                      00134 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00028     x = 1;
                      00135         MOVE?CB 001h, _x
                          M         CHK?RP  _x
                          M     if (((_x)    & 8000h) != PREV_ALT)
                          M       if ((_x)    & 8000h)
                          M         bsf     WDTCON, ADSHR
                          M       else
                          M         bcf     WDTCON, ADSHR
                          M       endif
                          M PREV_ALT = (_x)    & 8000h
                          M     endif
                          M     if ((((_x)    & 0fffh) > BANKA_END) & (((_x)    & 0fffh) < (0f01h + BANKA_END)))
                          M       if (((_x)    & 0f00h) != (PREV_BANK << 8))
                          M         movlb   high (_x)
                          M PREV_BANK = high (_x)
                          M       endif
                          M     endif
                          M     if (low (001h) == 0)
                          M         clrf    _x
                          M     else
                          M       if (low (001h) == 255)
                          M         setf    _x
                          M       else
0000AC 0E01               M         movlw   low (001h)
0000AE 6E1A               M         movwf   _x
                          M       endif
                          M     endif
                      00136 
                      00137 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00030   goto inicio         ; brinca a l
                            a etiqueta inicio
                      00138         GOTO?L  _inicio
                          M         L?GOTO  _inicio
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_inicio))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _inicio
                          M     else
                          M       if ((_inicio) < 1)
                          M         goto    _inicio
                          M       else
                          M         if ((_inicio) > $)
                          M         goto    _inicio
                          M         else
                          M           if ((_inicio) < ($ - 3ffh))
                          M         goto    _inicio
                          M           else
0000B0 D7EA               M         bra     _inicio
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00139 
                      00140 ; C:\USERS\CUATES\DOCUMENTS\GITHUB\MICROCODE\P3\PRACT4.PBP      00032   end
                      00141         END?    
  0000                    M     local loop
0000B2 0003               M loop    sleep
                          M         L?GOTO  loop
                          M     ifdef USE_LINKER
                          M         CLRWDT?
                          M     else
                          M       if ($ == (_45loop))
                          M         CLRWDT?
                          M       endif
                          M     endif
                          M 
                          M         RST?RP
                          M     if (PREV_ALT != 0)
                          M         bcf     WDTCON, ADSHR
                          M PREV_ALT = 0
                          M     endif
                          M     if (PREV_BANK != 0)
                          M         movlb   0
                          M PREV_BANK = 0
                          M     endif
                          M 
                          M     ifdef USE_LINKER
                          M         goto    _45loop
                          M     else
                          M       if ((_45loop) < 1)
                          M         goto    _45loop
                          M       else
                          M         if ((_45loop) > $)
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         goto    _45loop
                          M         else
                          M           if ((_45loop) < ($ - 3ffh))
                          M         goto    _45loop
                          M           else
0000B4 D7FE               M         bra     _45loop
                          M           endif
                          M         endif
                          M       endif
                          M     endif
                      00142 
                      00143         END
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ACTVIE                            00000002
ACTVIF                            00000002
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADC_BITS                          00000008
ADC_CLOCK                         00000003
ADC_SAMPLEUS                      00000032
ADDEN                             00000003
ADDR0                             00000000
ADDR1                             00000001
ADDR2                             00000002
ADDR3                             00000003
ADDR4                             00000004
ADDR5                             00000005
ADDR6                             00000006
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
BANK0_END                         000000FF
BANK0_START                       00000060
BANK1_END                         000001FF
BANK1_START                       00000100
BANK2_END                         000002FF
BANK2_START                       00000200
BANK3_END                         000003FF
BANK3_START                       00000300
BANK4_END                         000004FF
BANK4_START                       00000400
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

BANK5_END                         000005FF
BANK5_START                       00000500
BANK6_END                         000006FF
BANK6_START                       00000600
BANK7_END                         000007FF
BANK7_START                       00000700
BANKA_END                         0000005F
BANKA_START                       00000000
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIT?FLIP                          
BIT?GOTO                          
BIT?R1                            
BIT?R2                            
BIT?W                             
BLOCK_SIZE                        00000020
BOR                               00000000
BRG16                             00000003
BRGH                              00000002
BSR                               00000FE0
BTOEE                             00000004
BTOEF                             00000004
BTSEE                             00000007
BTSEF                             00000007
BUTTON_PAUSE                      0000000A
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1                              00000002
CCP1AS                            00000FB6
CCP1CON                           00000FBD
CCP1DEL                           00000FB7
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1_BIT                          00000002
CCP1_REG                          00000F82
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2_BIT                          00000001
CCP2_REG                          00000F82
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CFGS                              00000006
CHK?RP                            
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIS                               00000003
CK                                00000006
CK1SPP                            00000000
CK2SPP                            00000001
CKE                               00000006
CKP                               00000004
CLK1EN                            00000004
CLKCFG0                           00000006
CLKCFG1                           00000007
CLRWDT?                           
CLRWDT?NOP                        
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
CMPGT?BCL                         
CRC16EE                           00000002
CRC16EF                           00000002
CRC5EE                            00000001
CRC5EF                            00000001
CREN                              00000004
CSEN                              00000005
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF                             00000004
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

CVRSS                             00000004
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DEBUGIN_BIT                       00000000
DEBUGIN_MODE                      00000001
DEBUGIN_REG                       00000F81
DEBUG_BAUD                        00000960
DEBUG_BIT                         00000000
DEBUG_DELAY                       0000019B
DEBUG_MODE                        00000001
DEBUG_REG                         00000F81
DFN8EE                            00000003
DFN8EF                            00000003
DIR                               00000002
DONE                              00000001
DUNN                              0000007C
DUNN5                             0000007E
DUNN_USED                         00000001
D_A                               00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1CON                          00000FBD
ECCP1DEL                          00000FB7
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EEPROM_START                      00F00000
END?                              
ENDP0                             00000003
ENDP1                             00000004
ENDP2                             00000005
ENDP3                             00000006
EPCONDIS                          00000003
EPHSHK                            00000004
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

EPINEN                            00000001
EPOUTEN                           00000002
EPSTALL                           00000000
FAST                              00000001
FERR                              00000002
FLAGS                             00000000
FLTS                              00000002
FREE                              00000004
FRM0                              00000000
FRM1                              00000001
FRM10                             00000002
FRM2                              00000002
FRM3                              00000003
FRM4                              00000004
FRM5                              00000005
FRM6                              00000006
FRM7                              00000007
FRM8                              00000000
FRM9                              00000001
FSEN                              00000002
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GOP                               00000013
GOTO?L                            
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
HSER2_BAUD                        00000960
HSER2_BITS                        00000008
HSER2_RCSTA                       00000090
HSER2_SPBRG                       00000040
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

HSER2_TXSTA                       00000020
HSER_BAUD                         00000960
HSER_BITS                         00000008
HSER_PORT                         00000001
HSER_RCSTA                        00000090
HSER_SPBRG                        00000040
HSER_TXSTA                        00000020
I2CFIRSTFLAG                      FLAGS, 2
I2CREADFLAG                       FLAGS, 3
I2CSTOPFLAG                       FLAGS, 5
I2CSTOPSTRFLAG                    FLAGS, 6
I2CWRITEFLAG                      FLAGS, 4
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IDLEIE                            00000004
IDLEIF                            00000004
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INIT                              00000082
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IVRST                             00000005
L00001                            0000008A
L00002                            000000AC
L?CALL                            
L?GOTO                            
LABEL?L                           
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCDCDFLAG                         FLAGS, 0
LCDINITFLAG                       FLAGS, 1
LCD_BITS                          00000004
LCD_COMMANDUS                     000007D0
LCD_DATAUS                        00000032
LCD_DBIT                          00000000
LCD_DREG                          00000F80
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

LCD_EBIT                          00000003
LCD_EREG                          00000F81
LCD_LINES                         00000002
LCD_RSBIT                         00000004
LCD_RSREG                         00000F80
LCD_RWBIT                         00000004
LCD_RWREG                         00000F80
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MOVE?AB                           
MOVE?AT                           
MOVE?AW                           
MOVE?AWW                          
MOVE?BA                           
MOVE?BB                           
MOVE?BT                           
MOVE?BW                           
MOVE?CA                           
MOVE?CB                           
MOVE?CT                           
MOVE?CW                           
MOVE?TA                           
MOVE?TB                           
MOVE?TT                           
MOVE?TW                           
MOVE?WA                           
MOVE?WB                           
MOVE?WT                           
MOVE?WW                           
MOVE?WWA                          
MUL                               00000040
MUL?BCB                           
MUL_USED                          00000001
N                                 00000004
NEXT?BCL                          
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_IPEN                          00000007
NOT_PD                            00000002
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OESPP                             00000002
OSC                               10
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSC_VALID                         00000001
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000002
P1M0                              00000006
P1M1                              00000007
PAUSE                             00000004
PAUSE?C                           
PAUSEL                            00000006
PAUSEUS                           0000001E
PAUSEUSL                          00000020
PAUSEUS_USED                      00000001
PAUSE_DELAY                       000003E5
PAUSE_USED                        00000001
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

PGM                               00000005
PIDEE                             00000000
PIDEF                             00000000
PIE1                              00000F9D
PIE2                              00000FA0
PIR                               00000F9E
PIR1                              00000F9E
PIR2                              00000FA1
PKTDIS                            00000004
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PPB0                              00000000
PPB1                              00000001
PPBI                              00000001
PPBRST                            00000006
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PREV_ALT                          00000000
PREV_BANK                         00000000
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEN                             00000007
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
R                                 00000002
R0                                00000001
R1                                00000003
R2                                00000005
R3                                00000007
R4                                00000009
R5                                0000000B
R6                                0000000D
R7                                0000000F
R8                                00000011
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RAM_BANKS                         00000008
RAM_END                           000007FF
RAM_START                         00000000
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RDPU                              00000007
RDSPP                             00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

RE3                               00000003
READ_WRITE                        00000002
RESET_ORG                         00000000
RESUME                            00000002
RI                                00000004
RM1                               00000014
RM2                               00000015
RR1                               00000016
RR2                               00000017
RS1                               00000018
RS2                               00000019
RSEN                              00000001
RST?RP                            
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SBOREN                            00000006
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SE0                               00000005
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SOFIE                             00000006
SOFIF                             00000006
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SPP0                              00000000
SPP1                              00000001
SPP2                              00000002
SPP3                              00000003
SPP4                              00000004
SPP5                              00000005
SPP6                              00000006
SPP7                              00000007
SPPBUSY                           00000004
SPPCFG                            00000F63
SPPCON                            00000F65
SPPDATA                           00000F62
SPPEN                             00000000
SPPEPS                            00000F64
SPPIE                             00000007
SPPIF                             00000007
SPPIP                             00000007
SPPOWN                            00000001
SREN                              00000005
SSPADD                            00000FC8
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STALLIE                           00000005
STALLIF                           00000005
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SUSPND                            00000001
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3NSYNC                           00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRNIE                             00000003
TRNIF                             00000003
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

UA                                00000001
UADDR                             00000F6E
UCFG                              00000F6F
UCON                              00000F6D
UEIE                              00000F6B
UEIR                              00000F6A
UEP0                              00000F70
UEP1                              00000F71
UEP10                             00000F7A
UEP11                             00000F7B
UEP12                             00000F7C
UEP13                             00000F7D
UEP14                             00000F7E
UEP15                             00000F7F
UEP2                              00000F72
UEP3                              00000F73
UEP4                              00000F74
UEP5                              00000F75
UEP6                              00000F76
UEP7                              00000F77
UEP8                              00000F78
UEP9                              00000F79
UERRIE                            00000001
UERRIF                            00000001
UFRM                              00000F66
UFRMH                             00000F67
UFRML                             00000F66
UIE                               00000F69
UIR                               00000F68
UOEMON                            00000006
UPUEN                             00000004
URSTIE                            00000000
URSTIF                            00000000
USBEN                             00000003
USBIE                             00000005
USBIF                             00000005
USBIP                             00000005
USTAT                             00000F6C
UTEYE                             00000007
UTRDIS                            00000003
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WRSPP                             00000006
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

WS0                               00000000
WS1                               00000001
WS2                               00000002
WS3                               00000003
WUE                               00000001
Z                                 00000002
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_BOR_OFF_2L                       000000F9
_BOR_ON_2L                        000000FF
_BOR_ON_ACTIVE_2L                 000000FD
_BOR_SOFT_2L                      000000FB
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG1L                         00300000
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_CPUDIV_OSC1_PLL2_1L              000000E7
_CPUDIV_OSC2_PLL3_1L              000000EF
_CPUDIV_OSC3_PLL4_1L              000000F7
_CPUDIV_OSC4_PLL6_1L              000000FF
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECIO_EC_1H                  000000F4
_FOSC_ECPLLIO_EC_1H               000000F6
_FOSC_ECPLL_EC_1H                 000000F7
_FOSC_EC_EC_1H                    000000F5
_FOSC_HSPLL_HS_1H                 000000FE
_FOSC_HS_1H                       000000FC
_FOSC_INTOSCIO_EC_1H              000000F8
_FOSC_INTOSC_EC_1H                000000F9
_FOSC_INTOSC_HS_1H                000000FB
_FOSC_INTOSC_XT_1H                000000FA
_FOSC_XTPLL_XT_1H                 000000F2
_FOSC_XT_XT_1H                    000000F0
_ICPRT_OFF_4L                     000000DF
_ICPRT_ON_4L                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PLLDIV_10_1L                     000000FE
_PLLDIV_12_1L                     000000FF
_PLLDIV_1_1L                      000000F8
_PLLDIV_2_1L                      000000F9
_PLLDIV_3_1L                      000000FA
_PLLDIV_4_1L                      000000FB
_PLLDIV_5_1L                      000000FC
_PLLDIV_6_1L                      000000FD
_PORTH                            00000F82
_PORTL                            00000F81
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

_TRISH                            00000F94
_TRISL                            00000F93
_USBDIV_1_1L                      000000DF
_USBDIV_2_1L                      000000FF
_USBMEMORYADDRESS                 00000400
_USED                             00000001
_VREGEN_OFF_2L                    000000DF
_VREGEN_ON_2L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4550                         00000001
_inicio                           00000086
_x                                0000001A
main                              00000082
pauseloop                         00000008
pauseusdone                       0000003E
pauseush                          00000030
pauseusloop                       0000002C
MPASM  5.49                        PRACT4.ASM   7-12-2018  20:02:07         PAGE 36


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX----------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:   190
Program Memory Bytes Free: 32578


Errors   :     0
Warnings :     0 reported,     6 suppressed
Messages :     0 reported,     0 suppressed

